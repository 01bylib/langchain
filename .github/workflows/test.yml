name: test

on:
  push:
    branches: [master]
  pull_request:

env:
  POETRY_VERSION: "1.4.2"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry==$POETRY_VERSION
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Build wheel
        run: poetry build
      - name: Create virtual environment and install wheel
        run: |
          python -m venv .ci_venv
          . .ci_venv/bin/activate
          whl_file=$(find dist -name "*.whl" | head -n 1)
          pip install "${whl_file}[ci-testing]"
      - name: Run unit tests
        run: |
          . .ci_venv/bin/activate
          pytest tests/unit_tests
